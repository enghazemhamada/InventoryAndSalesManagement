@model EditSalesInvoiceWithCustomersWithProductsViewModel

@{
    ViewData["Title"] = "Edit Sales Invoice";
    Layout = "/Features/Shared/_Layout.cshtml";

    SelectList customerOptions = new SelectList(Model.Customers, "Id", "Name");
    decimal invoiceTotal = Model.Items.Sum(i => i.Quantity * i.Price);
}

<h2>Edit Sales Invoice</h2>
<a asp-action="Index" class="btn btn-primary mt-2 mb-3">Back</a>

<form asp-action="SaveEdit" method="post" asp-route-id="@Model.Id">
    <div asp-validation-summary="All" class="text-danger"></div>
    <div class="mb-3">
        <label>Customer</label>
        <select asp-for="CustomerId" asp-items="customerOptions" class="form-control w-25">
        </select>
    </div>

    <table class="table table-bordered" id="itemsTable">
        <thead class="table-dark">
            <tr>
                <th>Product</th>
                <th>Price</th>
                <th>Quantity</th>
                <th>Total</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @for(int i = 0; i < Model.Items.Count; i++)
            {
                <tr>
                    <td>
                        <select name="Items[@i].ProductId" class="form-control productSelect">
                            @foreach(var product in Model.Products)
                            {
                                if(Model.Items[i].ProductId == product.Id)
                                {
                                    <option value="@product.Id" selected>@product.Name</option>
                                }
                                else
                                {
                                    <option value="@product.Id">@product.Name</option>
                                }
                            }
                        </select>
                    </td>
                    <td><input name="Items[@i].Price" class="form-control price" value="@Model.Items[i].Price" readonly /></td>
                    <td><input name="Items[@i].Quantity" class="form-control quantity" type="number" value="@Model.Items[i].Quantity" /></td>
                    @{
                        decimal total = Model.Items[i].Price * Model.Items[i].Quantity;
                    }
                    <td class="lineTotal">@total</td>
                    <td></td>
                </tr>
            }
        </tbody>
    </table>
    <button type="button" class="btn btn-sm btn-warning" id="addRow">Add Product</button>

    <div class="mt-3 mb-3 fw-bold">
        <label>Invoice Total:</label>
        $<span id="invoiceTotal">@invoiceTotal</span>
    </div>
    <button type="submit" class="btn btn-primary">Save Invoice</button>
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            var products = @Html.Raw(Json.Serialize(Model.Products.Select(p => new { p.Id, p.Name })));

            $("#addRow").click(function () {
                var row = `
                            <tr>
                                <td>
                                    <select name="Items[INDEX].ProductId" class="form-control productSelect">
                                        <option value="" disabled selected>--Select Product--</option>
                                        ${products.map(p => `<option value="${p.id}">${p.name}</option>`).join("")}
                                    </select>
                                </td>
                                <td><input name="Items[INDEX].Price" class="form-control price" readonly /></td>
                                <td><input name="Items[INDEX].Quantity" class="form-control quantity" type="number" value="1" /></td>
                                <td class="lineTotal">0</td>
                                <td><button type="button" class="btn btn-danger btn-sm removeRow">Delete</button></td>
                            </tr>`;
                $("#itemsTable tbody").append(row.replace(/INDEX/g, $("#itemsTable tbody tr").length));
            });

            $(document).on("click", ".removeRow", function () {
                $(this).closest("tr").remove();
                updateInvoiceTotal();
            });

            $(document).on("change", ".productSelect", function () {
                var row = $(this).closest("tr");
                var productId = $(this).val();
                $.get("/Product/GetProductPrice", { productId: productId }, function (res) {
                    row.find(".price").val(res.price);
                    row.find(".quantity").attr("max", res.stock);
                    updateRowTotal(row);
                });
            });

            $(document).on("input", ".quantity", function () {
                var row = $(this).closest("tr");
                updateRowTotal(row);
            });

            function updateRowTotal(row) {
                var price = parseFloat(row.find(".price").val()) || 0;
                var qty = parseInt(row.find(".quantity").val()) || 0;
                var total = price * qty;
                row.find(".lineTotal").text(total.toFixed(2));
                updateInvoiceTotal();
            }

            function updateInvoiceTotal() {
                var total = 0;
                $(".lineTotal").each(function () {
                    total += parseFloat($(this).text()) || 0;
                });
                $("#invoiceTotal").text(total.toFixed(2));
            }
        });
    </script>
}
